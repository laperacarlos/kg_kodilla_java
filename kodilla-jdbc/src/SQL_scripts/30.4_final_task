create table BOOKS_AUD(
                          EVENT_ID int(11) not null auto_increment,
                          EVENT_DATE datetime not null,
                          EVENT_TYPE varchar(10) default null,
                          BOOK_ID int(11) not null,
                          OLD_TITLE varchar(255),
                          NEW_TITLE varchar(255),
                          OLD_PUBYEAR int(4),
                          NEW_PUBYEAR int(4),
                          OLD_BESTSELLER boolean,
                          NEW_BESTSELLER boolean,
                          primary key (EVENT_ID)
);

create table READERS_AUD(
                            EVENT_ID int(11) not null auto_increment,
                            EVENT_DATE datetime not null,
                            EVENT_TYPE varchar(10) default null,
                            READER_ID int(11) not null,
                            OLD_FIRSTNAME varchar(255),
                            NEW_FIRSTNAME varchar(255),
                            OLD_LASTNAME varchar(255),
                            NEW_LASTNAME varchar(255),
                            OLD_PESELID varchar(255),
                            NEW_PESELID varchar(11),
                            primary key (EVENT_ID)
);

#triggers on table BOOKS

delimiter $$
create trigger BOOKS_INSERT after insert on BOOKS
    for each row
begin
    insert into BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER)
        value(curtime(), 'INSERT',  NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
end $$
delimiter ;

delimiter $$
create trigger BOOKS_DELETE after delete on BOOKS
    for each row
begin
    insert into BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, OLD_TITLE, OLD_PUBYEAR)
        value(curtime(), 'DELETE',  OLD.BOOK_ID, OLD.TITLE, OLD_PUBYEAR);
end $$
delimiter ;

delimiter $$
create trigger BOOKS_UPDATE after update on BOOKS
    for each row
begin
    insert into BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, OLD_TITLE, NEW_TITLE, OLD_PUBYEAR, NEW_PUBYEAR, OLD_BESTSELLER, NEW_BESTSELLER)
        value(curtime(), 'UPDATE',  OLD.BOOK_ID, OLD.TITLE, NEW.TITLE, OLD.PUBYEAR, NEW.PUBYEAR, OLD.BESTSELLER, NEW.BESTSELLER);
end $$
delimiter ;

#triggers on table READERS

delimiter $$
create trigger READERS_INSERT after insert on READERS
    for each row
begin
    insert into READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID)
        value(curtime(), 'INSERT',  NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID);
end $$
delimiter ;

delimiter $$
create trigger READERS_DELETE after delete on READERS
    for each row
begin
    insert into READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
        value(curtime(), 'DELETE',  OLD.READER_ID);
end $$
delimiter ;

delimiter $$
create trigger READERS_UPDATE after update on READERS
    for each row
begin
    insert into READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, OLD_FIRSTNAME, NEW_FIRSTNAME, OLD_LASTNAME, NEW_LASTNAME, OLD_PESELID, NEW_PESELID)
        value(curtime(), 'UPDATE', OLD.READER_ID, OLD.FIRSTNAME, NEW.FIRSTNAME, OLD.LASTNAME, NEW.LASTNAME, OLD.PESELID, NEW.PESELID);
end $$
delimiter ;